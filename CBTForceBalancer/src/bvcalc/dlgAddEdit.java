/*
Copyright (c) 2008, George Blouin Jr. (skyhigh@solaris7.com)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are
permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this list of
conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, this list
of conditions and the following disclaimer in the documentation and/or other materials
provided with the distribution.
    * Neither the name of George Blouin Jr nor the names of contributors may be
used to endorse or promote products derived from this software without specific prior
written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

package bvcalc;

import java.awt.event.KeyEvent;

/**
 *
 * @author  justin
 */
public class dlgAddEdit extends javax.swing.JDialog {
    private Unit MyUnit;
    private boolean Result = false;

    /** Creates new form dlgAddEdit */
    public dlgAddEdit( java.awt.Frame parent, boolean modal ) {
        super(parent, modal);
        initComponents();
        MyUnit = new Unit();
        AddInfo();
    }

    /** Creates new form dlgAddEdit */
    public dlgAddEdit( java.awt.Frame parent, boolean modal, Unit u ) {
        super(parent, modal);
        initComponents();
        MyUnit = u;
        AddInfo();
    }

    private void AddInfo() {
        txtTypeModel.setText( MyUnit.TypeModel );
        cmbGunnery.setSelectedIndex( MyUnit.Gunnery );
        cmbPiloting.setSelectedIndex( MyUnit.Piloting );
        cmbUnitType.setSelectedIndex( MyUnit.UnitType );
        chkC3.setSelected( MyUnit.UsingC3 );
        txtTonnage.setText( "" + MyUnit.Tonnage );
        txtBaseBV.setText( "" + MyUnit.BaseBV );
        txtMiscMod.setText( "" + MyUnit.MiscMod );
        txtMechwarrior.setText( "" + MyUnit.Mechwarrior );
    }

    public Unit GetUnit() {
        return MyUnit;
    }

    public boolean GetResult() {
        return Result;
    }

    private void Verify() throws Exception {
        try {
            double d = Double.parseDouble( txtBaseBV.getText() );
        } catch( Exception e ) {
            throw new Exception( "Please enter a valid number for base BV." );
        }
        try {
            double d = Double.parseDouble( txtMiscMod.getText() );
        } catch( Exception e ) {
            throw new Exception( "Please enter a valid number for the miscellaneous modifier." );
        }
        try {
            double d = Double.parseDouble( txtTonnage.getText() );
        } catch( Exception e ) {
            throw new Exception( "Please enter a valid number for tonnage." );
        }
    }

    private void UpdateUnit() {
        MyUnit.TypeModel = txtTypeModel.getText();
        MyUnit.Mechwarrior = txtMechwarrior.getText();
        MyUnit.Gunnery = cmbGunnery.getSelectedIndex();
        MyUnit.Piloting = cmbPiloting.getSelectedIndex();
        MyUnit.UnitType = cmbUnitType.getSelectedIndex();
        MyUnit.Tonnage = (float) Double.parseDouble( txtTonnage.getText() );
        MyUnit.BaseBV = (float) Double.parseDouble( txtBaseBV.getText() );
        MyUnit.MiscMod = (float) Double.parseDouble( txtMiscMod.getText() );
        MyUnit.UsingC3 = chkC3.isSelected();
        MyUnit.Refresh();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTypeModel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBaseBV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMiscMod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTonnage = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cmbUnitType = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbGunnery = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbPiloting = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        chkC3 = new javax.swing.JCheckBox();
        lblMechwarrior = new javax.swing.JLabel();
        txtMechwarrior = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnOkay = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Unit");
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Type/Model");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(jLabel1, gridBagConstraints);

        txtTypeModel.setMaximumSize(new java.awt.Dimension(150, 20));
        txtTypeModel.setMinimumSize(new java.awt.Dimension(150, 20));
        txtTypeModel.setPreferredSize(new java.awt.Dimension(150, 20));
        txtTypeModel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SelectText(evt);
            }
        });
        jPanel1.add(txtTypeModel, new java.awt.GridBagConstraints());

        jLabel3.setText("Base BV");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 4);
        jPanel1.add(jLabel3, gridBagConstraints);

        txtBaseBV.setMaximumSize(new java.awt.Dimension(150, 20));
        txtBaseBV.setMinimumSize(new java.awt.Dimension(150, 20));
        txtBaseBV.setPreferredSize(new java.awt.Dimension(150, 20));
        txtBaseBV.setSelectionEnd(999);
        txtBaseBV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SelectText(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel1.add(txtBaseBV, gridBagConstraints);

        jLabel4.setText("Misc. BV Modifier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(jLabel4, gridBagConstraints);

        txtMiscMod.setMaximumSize(new java.awt.Dimension(150, 20));
        txtMiscMod.setMinimumSize(new java.awt.Dimension(150, 20));
        txtMiscMod.setPreferredSize(new java.awt.Dimension(150, 20));
        txtMiscMod.setSelectionEnd(999);
        txtMiscMod.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SelectText(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel1.add(txtMiscMod, gridBagConstraints);

        jLabel5.setText("Tonnage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(jLabel5, gridBagConstraints);

        txtTonnage.setMaximumSize(new java.awt.Dimension(150, 20));
        txtTonnage.setMinimumSize(new java.awt.Dimension(150, 20));
        txtTonnage.setPreferredSize(new java.awt.Dimension(150, 20));
        txtTonnage.setSelectionEnd(999);
        txtTonnage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SelectText(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel1.add(txtTonnage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("Unit Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel2.add(jLabel8, gridBagConstraints);

        cmbUnitType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BattleMech", "IndustrialMech", "ProtoMech", "Combat Vehicle", "Infantry", "Battle Armor", "Conventional Fighter", "Aerospace Fighter", "Small Craft", "Dropship", "Support Vehicle", "Mobile Structure" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 4;
        jPanel2.add(cmbUnitType, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Gunnery");
        jPanel3.add(jLabel6, new java.awt.GridBagConstraints());

        cmbGunnery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        jPanel3.add(cmbGunnery, new java.awt.GridBagConstraints());

        jLabel2.setPreferredSize(new java.awt.Dimension(15, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel7.setText("Piloting");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel7, gridBagConstraints);

        cmbPiloting.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel3.add(cmbPiloting, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        jPanel2.add(jPanel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jPanel4, gridBagConstraints);

        chkC3.setText("This unit is part of a C3 network");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel2.add(chkC3, gridBagConstraints);

        lblMechwarrior.setText("Mechwarrior");
        lblMechwarrior.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(lblMechwarrior, gridBagConstraints);

        txtMechwarrior.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanel2.add(txtMechwarrior, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jPanel2, gridBagConstraints);

        btnOkay.setText("Okay");
        btnOkay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkayActionPerformed(evt);
            }
        });
        jPanel5.add(btnOkay);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel5.add(btnCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jPanel5, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnOkayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkayActionPerformed
    try {
        Verify();
    } catch( Exception e ) {
        javax.swing.JOptionPane.showMessageDialog( this, "There was a problem with the unit:\n" + e );
        return;
    }
    UpdateUnit();
    Result = true;
    setVisible( false );
}//GEN-LAST:event_btnOkayActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    setVisible( false );
}//GEN-LAST:event_btnCancelActionPerformed

private void SelectText(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SelectText
    javax.swing.JTextField e = (javax.swing.JTextField) evt.getComponent();
    e.selectAll();
}//GEN-LAST:event_SelectText

private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        btnOkayActionPerformed(null);
    }
}//GEN-LAST:event_formKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOkay;
    private javax.swing.JCheckBox chkC3;
    private javax.swing.JComboBox cmbGunnery;
    private javax.swing.JComboBox cmbPiloting;
    private javax.swing.JComboBox cmbUnitType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblMechwarrior;
    private javax.swing.JTextField txtBaseBV;
    private javax.swing.JTextField txtMechwarrior;
    private javax.swing.JTextField txtMiscMod;
    private javax.swing.JTextField txtTonnage;
    private javax.swing.JTextField txtTypeModel;
    // End of variables declaration//GEN-END:variables

}
