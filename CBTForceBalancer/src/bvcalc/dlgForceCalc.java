/*
Copyright (c) 2008, George Blouin Jr. (skyhigh@solaris7.com)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are
permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this list of
conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, this list
of conditions and the following disclaimer in the documentation and/or other materials
provided with the distribution.
    * Neither the name of George Blouin Jr nor the names of contributors may be
used to endorse or promote products derived from this software without specific prior
written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

package bvcalc;

/**
 *
 * @author  justin
 */
public class dlgForceCalc extends javax.swing.JDialog {

    /** Creates new form dlgFoceCalc */
    public dlgForceCalc(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnRecalc = new javax.swing.JButton();
        lblForceMod = new javax.swing.JLabel();
        txtForceA = new javax.swing.JTextField();
        txtForceB = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Force Multiplier Calculator");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Force A Size");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Force B Size");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 4);
        getContentPane().add(jLabel2, gridBagConstraints);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(btnClose, gridBagConstraints);

        btnRecalc.setText("Recalc");
        btnRecalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecalcActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(btnRecalc, gridBagConstraints);

        lblForceMod.setText("No modifier yet...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(lblForceMod, gridBagConstraints);

        txtForceA.setMaximumSize(new java.awt.Dimension(75, 19));
        txtForceA.setMinimumSize(new java.awt.Dimension(75, 19));
        txtForceA.setPreferredSize(new java.awt.Dimension(75, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(txtForceA, gridBagConstraints);

        txtForceB.setMaximumSize(new java.awt.Dimension(75, 19));
        txtForceB.setMinimumSize(new java.awt.Dimension(75, 19));
        txtForceB.setPreferredSize(new java.awt.Dimension(75, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        getContentPane().add(txtForceB, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnRecalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecalcActionPerformed
    int A = 0, B = 0;
    try {
        A = Integer.parseInt( txtForceA.getText() );
    } catch( Exception e ) {
        javax.swing.JOptionPane.showMessageDialog( this, "Please enter a valid number for Force A." );
        return;
    }
    try {
        B = Integer.parseInt( txtForceB.getText() );
    } catch( Exception e ) {
        javax.swing.JOptionPane.showMessageDialog( this, "Please enter a valid number for Force B." );
        return;
    }
    if( A <= 0 || B <= 0 ) {
        javax.swing.JOptionPane.showMessageDialog( this, "Please enter a force greater than 0." );
        return;
    }
    if( A > B ) {
        float mod = ( ((float) B) / ((float) A) ) + ( ((float) A) / ((float) B) ) - 1.0f;
        lblForceMod.setText( "Force A multiplies total BV by: " + String.format( "%1$,.5f", mod ) );
    } else {
        float mod = ( ((float) A) / ((float) B) ) + ( ((float) B) / ((float) A) ) - 1.0f;
        lblForceMod.setText( "Force B multiplies total BV by: " + String.format( "%1$,.5f", mod ) );
    }
}//GEN-LAST:event_btnRecalcActionPerformed

private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    dispose();
}//GEN-LAST:event_btnCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRecalc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblForceMod;
    private javax.swing.JTextField txtForceA;
    private javax.swing.JTextField txtForceB;
    // End of variables declaration//GEN-END:variables

}
